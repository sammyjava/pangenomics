#!/bin/bash
# usage: WekaJRip
#  -a,--arfffile <arg>         ARFF input file (required)
#  -D,--debug                  enable debug option (false)
#  -E                          do NOT check the error rate>=0.5 in stopping
#                              criteria (false)
#  -F,--folds <arg>            number of folds for REP; one fold is used as
#                              pruning set (3)
#  -k,--kfold <arg>            cross-validation k-fold (10)
#  -N,--minimalweights <arg>   minimal weights of instances within a split
#                              (2.0)
#  -O,--nruns <arg>            number of runs of optimizations (2)
#  -P                          do NOT use pruning (false)
#  -S,--seed <arg>             seed of randomization (1)

INPUTPREFIX=$1

## ARFF filtering parameters
ARFFFILE=$INPUTPREFIX.arff
NUMCASEPATHS=0
NUMCTRLPATHS=0
MINSIZE=0
MINSUPPORT=0
MAXPVALUE=1.0

## JRip options - vary S for random variance
F=8
N=2.0
O=2
S=1

## delete former ARFF file
rm -f $ARFFFILE

if [ ! -s $ARFFFILE ]
then
    echo "Writing $ARFFFILE with $NUMCASEPATHS cases and $NUMCTRLPATHS controls"
    java -server -cp "build/install/fr/lib/*" org.ncgr.pangenomics.genotype.fr.FRUtils -arff -i $INPUTPREFIX -ncase $NUMCASEPATHS -nctrl $NUMCTRLPATHS -s $MINSIZE -m $MINSUPPORT -mp $MAXPVALUE
fi
    
java -server -cp "build/install/fr/lib/*" org.ncgr.weka.WekaJRip -a $ARFFFILE -F $F -N $N -O $O -S $S
