#!/bin/bash
# usage: WekaSMO
#  -a,--arfffile <arg>         input data file in ARFF format (required)
#  -bo,--boostoption <arg>     boost method: Ada or Logit (none)
#  -C,--complexity <arg>       SMO complexity constant C
#  -cv,--crossvalidate         run cross-validation
#  -gs,--gridsearch            run a grid search over parameters
#  -k,--kfold <arg>            cross-validation k-fold (required)
#  -kernel,--kernel <arg>      kernel function: RBF or Poly (required)
#  -kp,--kernelparam <arg>     SMO kernel parameter (RBF:gamma,
#                              Poly:exponent)
#  -L,--tolerance <arg>        tolerance parameter [1.0e-3]
#  -M,--fitcalibrationmodels   fit calibration models to SVM outputs
#  -N,--normalization <arg>    0=normalize, 1=standardize, 2=neither [0]
#  -ng,--ngridsearch <arg>     set number of cases+controls (equal) to use
#                              in grid search [0=all]
#  -no,--numoptimize <arg>     the number of training/testing runs to
#                              optimize the model [10]
#  -op,--optimize              optimize model by running noptimize
#                              training/testing runs and choosing best
#  -P,--epsilon <arg>          epsilon for round-off error [1.0e-12]
#  -test,--test                run training/testing on datasets with given
#                              SMO and kernel parameters
#  -tf,--testfile <arg>        test data file in ARFF format

PREFIX=$1
C=$2
gamma=$3

TRAINFILE=$PREFIX.arff
TESTFILE=$PREFIX.testing.arff

KERNEL=RBF
NUMOPTIMIZE=25

echo "WekaSMO testing/training optimization on $TRAINFILE and $TESTFILE"
java -server -cp "build/install/pangenomics/lib/*" org.ncgr.weka.WekaSMO --optimize --arfffile=$TRAINFILE --testfile=$TESTFILE \
     --kernel=$KERNEL --complexity=$C --kernelparam=$gamma --numoptimize=$NUMOPTIMIZE $4
