#!/bin/bash

INPUTPREFIX=$1

SVMFILE="$INPUTPREFIX.svm.txt"
RANGE="$INPUTPREFIX.svm.range.txt"
FULLSCALE="$INPUTPREFIX.svm.scale.txt"

## SVM file building parameters
PRIORITYOPTION=3
MINPRIORITY=1

MINSIZE=0

MINSUPPORT=10

## grid scan
GRIDOUT="$INPUTPREFIX.svm.grid.txt"
K=10
# samples to use in grid search
NGRIDCASES=100
NGRIDCONTROLS=100
C_POWER_STEP=1
GAMMA_POWER_STEP=1

## SVM
NRUNS=10
NSVMCASES=0
NSVMCONTROLS=0

########################################################
## delete output files to force rebuild
#rm -f $FULLSCALE
#rm -f $RANGE
rm -f $GRIDOUT
########################################################

## write the SVM file
if [ ! -s $SVMFILE ]
then
    echo "Writing $SVMFILE with -s $MINSIZE -m $MINSUPPORT -pri $PRIORITYOPTION --minpriority $MINPRIORITY"
    java -server -cp "build/install/fr/lib/*" org.ncgr.pangenomics.genotype.fr.FRUtils -svm \
	 -i $INPUTPREFIX -s $MINSIZE -m $MINSUPPORT -pri $PRIORITYOPTION -mpri $MINPRIORITY
fi

## scale the SVM data
if [ ! -s $FULLSCALE ]
then
    echo "Scaling $SVMFILE"
    java -server -cp "build/install/fr/lib/*" org.ncgr.svm.SvmScaler -s $RANGE -d $SVMFILE > $FULLSCALE
fi

## run GridSearcher on the full scaled data to find optimum SVM parameters
# usage: GridSearcher [options]
#  -Cstep <arg>       step for n in C=2^n [1]
#  -datafile <arg>    input data file in SVM format [required]
#  -gammastep <arg>   step for n in gamma=2^n [1]
#  -k <arg>           k-fold for cross validation [10]
#  -ncases <arg>      set number of cases to use in search [0=all]
#  -ncontrols <arg>   set number of controls to use in search [0=all]
#  -v                 toggle verbose output
if [ ! -s $GRIDOUT ]
then
   starttime=`date`
   ARGS="-datafile $FULLSCALE -k $K -ncases $NGRIDCASES -ncontrols $NGRIDCONTROLS -Cstep $C_POWER_STEP -gammastep $GAMMA_POWER_STEP"
   echo "Running GridSearcher with $ARGS"
   java -server -cp "build/install/fr/lib/*" org.ncgr.svm.GridSearcher -v $ARGS > $GRIDOUT
   endtime=`date`
   echo "$starttime - $endtime"
fi

## set SVM parameters, default or from GridSearcher
ARGS="-h 0 -m 10000 -C 1.0 -k $K -ncases $NSVMCASES -ncontrols $NSVMCONTROLS"
if [ -s $GRIDOUT ]
then
    C=`tail -1 $GRIDOUT | awk '{ print $1; }'`
    gamma=`tail -1 $GRIDOUT | awk '{ print $2; }'`
    perc=`tail -1 $GRIDOUT | awk '{ print $3; }'`
    ARGS="-C $C -gamma $gamma -k $K -ncases $NSVMCASES -ncontrols $NSVMCONTROLS"
    echo "GRID search resulted in: $ARGS"
fi

## run the cross-validation
#echo "Running $NRUNS SvmCrossValidator runs on $FULLSCALE with $ARGS"
#java -server -cp "build/install/fr/lib/*" org.ncgr.svm.SvmCrossValidator \
#     $ARGS -nruns $NRUNS -i $FULLSCALE > "$INPUTPREFIX.crossvalidation.txt"
