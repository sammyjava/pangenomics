#!/bin/sh
# usage: Trainer
#  -b,--probability-estimates <arg>   0/1 toggle whether to train a SVC or
#                                     SVR model for probability estimates
#                                     [0]
#  -c,--cost <arg>                    set the cost parameter C in C-SVC,
#                                     epsilon-SVR and nu-SVR [1]
#  -d,--kernel-degree <arg>           set degree in kernel function [3]
#  -datafile <arg>                    input data file in SVM format
#                                     [required]
#  -e,--epsilon <arg>                 set tolerance of termination criterion
#                                     [0.001]
#  -g,--kernel-gamma <arg>            set gamma in kernel function
#                                     [1/#features]
#  -h,--shrinking <arg>               0/1 toggle whether to use the
#                                     shrinking heuristics [1]
#  -m,--cachesize <arg>               set cache memory size in MB [100]
#  -modelfile <arg>                   output model file [required]
#  -n,--nu <arg>                      set the parameter nu of nu-SVC,
#                                     one-class SVM, and nu-SVR [0.5]
#  -p,--epsilon-loss <arg>            set the epsilon value in loss function
#                                     of epsilon-SVR [0.1]
#  -r,--kernel-coef0 <arg>            set coef0 in kernel function [0]
#  -s,--svm-type <arg>                type of SVM: C-SVC, nu-SVC,
#                                     one-class-SVM, epsilon-SVR, nu-SVR
#                                     [C-SVC]
#  -t,--kernel-type <arg>             SVM kernel function: LINEAR, POLY,
#                                     RBF, SIGMOID [RBF]
#  -v,--verbose                       toggle verbose output
#  -w,--weight <arg>                  set the parameter C of class i to
#                                     weight*C, for C-SVC [1]

PREFIX=$1
KERNEL=$2
C=$3
GAMMA=$4

DATAFILE="$PREFIX.svm.scale.txt"
MODELFILE="$PREFIX.svm.model.txt"

SVMTYPE="C-SVC"

ARGS="--svm-type=$SVMTYPE --kernel-type=$KERNEL --cost=$C --kernel-gamma=$GAMMA"

## run the SVM trainer
echo "Running Trainer on $DATAFILE with $ARGS"
java -server -cp "build/install/pangenomics/lib/*" org.ncgr.libsvm.Trainer -v $ARGS -datafile $DATAFILE -modelfile $MODELFILE
